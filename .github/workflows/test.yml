name: GophKeeper Tests

on:
  push:
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'
        check-latest: true
        
    - name: Show existing test file
      run: |
        ls -la client/example/
        echo "Используем тестовый файл из репозитория: client/example/test.kdbx (пароль: test)"
      
    - name: Run client tests
      run: make test
      
    - name: Run client tests with coverage
      run: make test-coverage
      
    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: client/logs/coverage.html
        
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'
        
    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.8
        golangci-lint --version
        
    - name: Download CLIENT Go modules
      working-directory: ./client
      run: go mod download

    - name: Lint CLIENT module
      working-directory: ./client
      run: golangci-lint run ./... --fix

    - name: Download SERVER Go modules
      working-directory: ./server
      run: go mod download

    - name: Lint SERVER module
      working-directory: ./server
      run: golangci-lint run ./... --fix

  # build:
  #   name: Build